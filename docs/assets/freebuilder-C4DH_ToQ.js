import{i as Ce}from"./components-CLYpBYEG.js";import"./svg-ckjYZtu2.js";import"./storage-VIi1Jdgv.js";async function Te(e){return new Promise((t,i)=>{const n=new Image;n.crossOrigin="anonymous",n.onload=()=>{const c=document.createElement("canvas");c.width=n.width,c.height=n.height,c.getContext("2d").drawImage(n,0,0);try{const o=c.toDataURL("image/png");t(o)}catch(o){console.warn("Failed to convert image to data URL:",o),t(e)}},n.onerror=()=>{console.warn("Failed to load image:",e),t(e)},n.src=e})}async function me(){const e=document.getElementById("serifsGrid"),t=document.getElementById("joinsGrid");if(!e||!t)throw new Error("Grid not found. Please ensure the builder is loaded.");let i=1,n=e.parentElement;for(;n&&n!==document.body;){const q=window.getComputedStyle(n).transform;if(q&&q!=="none"){const R=q.match(/matrix\(([^)]+)\)/);if(R){const oe=R[1].split(",").map(ae=>parseFloat(ae.trim()));if(oe.length>=6){i=oe[0],console.log(`Detected grid scale factor: ${i}`);break}}}n=n.parentElement}const c=500,r=500,o=400,s=400,h=window.getComputedStyle(t),b=parseFloat(h.top)||50,a=parseFloat(h.left)||50,g=0,l=0,E=Math.max(c,a+o),S=Math.max(r,b+s),p=E-g,f=S-l,C=e.getBoundingClientRect(),B=t.getBoundingClientRect(),z=Math.min(C.left,B.left),T=Math.min(C.top,B.top);console.log(`Export debug info:
    - Scale factor: ${i}
    - Serifs grid: ${c}x${r}
    - Joins grid: ${o}x${s} at (${a}, ${b})
    - Export dimensions: ${p}x${f}
    - Serifs screen rect: ${C.width}x${C.height}
    - Joins screen rect: ${B.width}x${B.height}
    - Screen reference: (${z}, ${T})
  `);const m="http://www.w3.org/2000/svg",x=document.createElementNS(m,"svg");x.setAttribute("xmlns",m),x.setAttribute("viewBox",`0 0 ${p} ${f}`),x.setAttribute("width",p),x.setAttribute("height",f);const L=document.createElementNS(m,"g"),xe=[{element:e,rect:C,name:"serifs"},{element:t,rect:B,name:"joins"}];for(const pe of xe){const q=pe.element.querySelectorAll(".grid-cell");for(const R of q){const oe=R.querySelectorAll("svg"),ae=R.querySelectorAll('[data-textured="true"]');for(const J of oe){const D=J.cloneNode(!0),$=R.getBoundingClientRect(),ne=($.left-z)/i,v=($.top-T)/i,w=window.getComputedStyle(J),M=parseFloat(w.width)||100,_=parseFloat(w.height)||100;console.log(`Shape export - Cell screen: (${$.left}, ${$.top}), ${$.width}x${$.height}, Computed SVG: ${w.width}x${w.height}, Final pos: (${ne}, ${v}), Size: ${M}x${_}`);const K=w.position,G=w.top,U=w.left,F=w.right,I=w.bottom,N=w.transform;let V=ne,Q=v;const ce=100,de=100;if(K==="absolute"){if(U!=="auto"&&U!==""){const u=parseFloat(U);V+=u}else if(F!=="auto"&&F!==""){const u=parseFloat(F);V+=ce-M-u}if(G!=="auto"&&G!==""){const u=parseFloat(G);Q+=u}else if(I!=="auto"&&I!==""){const u=parseFloat(I);Q+=de-_-u}}const A=document.createElementNS(m,"g");let y=`translate(${V}, ${Q})`;if(N&&N!=="none"){const u=N.match(/matrix\(([^)]+)\)/);if(u){const re=u[1].split(",").map(j=>parseFloat(j.trim()));if(re.length===6){const j=re[4],O=re[5];y+=` translate(${j}, ${O})`}}}A.setAttribute("transform",y);const H=D.innerHTML,ie=D.getAttribute("viewBox");if(ie){const u=document.createElementNS(m,"svg");u.setAttribute("viewBox",ie),u.setAttribute("width",M),u.setAttribute("height",_),u.innerHTML=H,A.appendChild(u)}else{const u=document.createElementNS(m,"g");u.innerHTML=H,A.appendChild(u)}L.appendChild(A)}for(const J of ae){const D=R.getBoundingClientRect(),$=(D.left-z)/i,ne=(D.top-T)/i,v=window.getComputedStyle(J),w=parseFloat(v.width)||100,M=parseFloat(v.height)||100,_=v.position,K=v.top,G=v.left,U=v.right,F=v.bottom,I=v.transform;let N=$,V=ne;const Q=100,ce=100;if(_==="absolute"){if(G!=="auto"&&G!==""){const y=parseFloat(G);N+=y}else if(U!=="auto"&&U!==""){const y=parseFloat(U);N+=Q-w-y}if(K!=="auto"&&K!==""){const y=parseFloat(K);V+=y}else if(F!=="auto"&&F!==""){const y=parseFloat(F);V+=ce-M-y}}const de=J.dataset.textureId,A=v.webkitMaskImage||v.maskImage;if(A&&A.includes("data:image/svg+xml;base64,")){const y=A.match(/data:image\/svg\+xml;base64,([^)'"]+)/);if(y)try{const H=y[1],ie=decodeURIComponent(escape(atob(H))),j=new DOMParser().parseFromString(ie,"image/svg+xml").querySelector("svg");if(j){const O=document.createElementNS(m,"g");let he=`translate(${N}, ${V})`;if(I&&I!=="none"){const d=I.match(/matrix\(([^)]+)\)/);if(d){const P=d[1].split(",").map(ee=>parseFloat(ee.trim()));if(P.length===6){const ee=P[4],ke=P[5];he+=` translate(${ee}, ${ke})`}}}O.setAttribute("transform",he);const fe=document.createElementNS(m,"defs"),W=document.createElementNS(m,"pattern"),se=`texture-${de}-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;W.setAttribute("id",se),W.setAttribute("patternUnits","userSpaceOnUse"),W.setAttribute("width",w),W.setAttribute("height",M);const we=v.backgroundImage.match(/url\(['"]?([^'"]+)['"]?\)/);if(we){let d=we[1];d.startsWith("/")?d=window.location.origin+d:!d.startsWith("http")&&!d.startsWith("data:")&&(d=new URL(d,window.location.href).href);try{d=await Te(d)}catch(ee){console.warn("Failed to convert texture to data URL, using absolute URL:",ee)}const P=document.createElementNS(m,"image");P.setAttribute("href",d),P.setAttribute("width",w),P.setAttribute("height",M),P.setAttribute("preserveAspectRatio","xMidYMid slice"),W.appendChild(P)}fe.appendChild(W),O.appendChild(fe);const be=j.getAttribute("viewBox"),Y=document.createElementNS(m,"svg");Y.setAttribute("width",w),Y.setAttribute("height",M),be&&Y.setAttribute("viewBox",be);const Z=j.cloneNode(!0),Se=Z.querySelectorAll("path, polygon, circle, ellipse, rect, line, polyline");Se.forEach(d=>{(!d.hasAttribute("fill")||d.getAttribute("fill")!=="none"&&d.getAttribute("fill")!=="")&&d.setAttribute("fill",`url(#${se})`),d.hasAttribute("stroke")&&d.getAttribute("stroke")!=="none"&&d.getAttribute("stroke")!==""&&d.setAttribute("stroke",`url(#${se})`)}),Se.length===0&&Array.from(Z.children).forEach(d=>{d.nodeName!=="defs"&&d.nodeName!=="style"&&d.setAttribute("fill",`url(#${se})`)}),Z.children.length>0?Array.from(Z.children).forEach(d=>{Y.appendChild(d)}):Y.innerHTML=Z.innerHTML,O.appendChild(Y),L.appendChild(O)}}catch(H){console.warn("Failed to process textured element:",H)}}}}}return x.appendChild(L),{svg:x,width:p,height:f}}async function Pe(){console.log("Starting SVG export...");const e=window.getPreviewMode?window.getPreviewMode():!1;window.setPreviewMode&&!e&&(window.setPreviewMode(!0),document.body.classList.add("preview-mode"),await new Promise(t=>setTimeout(t,100)));try{const{svg:t}=await me(),n=new XMLSerializer().serializeToString(t),c=new Blob([n],{type:"image/svg+xml"}),r=URL.createObjectURL(c),o=document.createElement("a");o.href=r,o.download=`asemia-composition-${Date.now()}.svg`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(r),console.log("SVG export complete!")}catch(t){console.error("SVG export failed:",t),alert("Export failed: "+t.message)}finally{window.setPreviewMode&&!e&&(window.setPreviewMode(!1),document.body.classList.remove("preview-mode"))}}async function Ee(){console.log("Starting PNG export...");const e=window.getPreviewMode?window.getPreviewMode():!1;window.setPreviewMode&&!e&&(window.setPreviewMode(!0),document.body.classList.add("preview-mode"),await new Promise(t=>setTimeout(t,100)));try{const{svg:t,width:i,height:n}=await me(),r=new XMLSerializer().serializeToString(t),o=new Blob([r],{type:"image/svg+xml;charset=utf-8"}),s=URL.createObjectURL(o),h=new Image;await new Promise((p,f)=>{h.onload=p,h.onerror=f,h.src=s});const b=document.createElement("canvas"),a=2;b.width=i*a,b.height=n*a;const g=b.getContext("2d");g.scale(a,a),g.drawImage(h,0,0,i,n),URL.revokeObjectURL(s);const l=await new Promise(p=>{b.toBlob(p,"image/png")}),E=URL.createObjectURL(l),S=document.createElement("a");S.href=E,S.download=`asemia-composition-${Date.now()}.png`,document.body.appendChild(S),S.click(),document.body.removeChild(S),URL.revokeObjectURL(E),console.log("PNG export complete!")}catch(t){console.error("PNG export failed:",t),alert("Export failed: "+t.message)}finally{window.setPreviewMode&&!e&&(window.setPreviewMode(!1),document.body.classList.remove("preview-mode"))}}async function $e(){console.log("Starting JPEG export...");const e=window.getPreviewMode?window.getPreviewMode():!1;window.setPreviewMode&&!e&&(window.setPreviewMode(!0),document.body.classList.add("preview-mode"),await new Promise(t=>setTimeout(t,100)));try{const t=document.documentElement.classList.contains("dark"),i=window.getComputedStyle(document.body),n=t?"#0f172a":"#ffffff",c=t?"#ffffff":"#000000";console.log("Theme:",t?"dark":"light"),console.log("Background color:",n),console.log("Fill color:",c);const{svg:r,width:o,height:s}=await me(),h=r.cloneNode(!0);h.querySelectorAll("path, polygon, circle, ellipse, rect, line, polyline").forEach(m=>{const x=m.getAttribute("fill"),L=m.getAttribute("stroke");(!x||x!=="none"&&!x.startsWith("url(#"))&&m.setAttribute("fill",c),L&&L!=="none"&&!L.startsWith("url(#")&&m.setAttribute("stroke",c)});const g=new XMLSerializer().serializeToString(h),l=new Blob([g],{type:"image/svg+xml;charset=utf-8"}),E=URL.createObjectURL(l),S=new Image;await new Promise((m,x)=>{S.onload=m,S.onerror=x,S.src=E});const p=document.createElement("canvas"),f=2;p.width=o*f,p.height=s*f;const C=p.getContext("2d");C.scale(f,f),C.fillStyle=n,C.fillRect(0,0,o,s),C.drawImage(S,0,0,o,s),URL.revokeObjectURL(E);const B=await new Promise(m=>{p.toBlob(m,"image/jpeg",.95)}),z=URL.createObjectURL(B),T=document.createElement("a");T.href=z,T.download=`asemia-composition-${Date.now()}.jpg`,document.body.appendChild(T),T.click(),document.body.removeChild(T),URL.revokeObjectURL(z),console.log("JPEG export complete!")}catch(t){console.error("JPEG export failed:",t),alert("Export failed: "+t.message)}finally{window.setPreviewMode&&!e&&(window.setPreviewMode(!1),document.body.classList.remove("preview-mode"))}}document.addEventListener("DOMContentLoaded",()=>{window.exportAsPNG=Ee,window.exportAsSVG=Pe,window.exportAsJPEG=$e,console.log("Export functionality initialized")});const Me=[{id:"welcome",title:"Welcome to the Asemic Typeform Crafter!",generalContent:`Build unique typographic forms using the fundamental elements of type: Serifs, Bodies, and Joins.

Let's take a quick tour.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"",position:"center",showSkip:!0,highlightPulse:!1},{id:"grids",title:"Understanding the Grids",generalContent:`You work with two overlapping grids:

• 5×5 Serifs Grid (white cells)
• 4×4 Joins Grid (inset, connecting elements)

Click anywhere in the grid to place shapes.`,desktopContent:"",mobileContent:"",desktopTargetSelector:".builder-grids-wrapper",mobileTargetSelector:"",position:"bottom",highlightPulse:!0,showSkip:!0},{id:"mobile-tabs",title:"Selecting Shapes",generalContent:`Tap a tab to view available shapes in that category.

Then tap a shape to select it.`,desktopContent:"",mobileContent:"",desktopTargetSelector:"#mobileSerifTab",mobileTargetSelector:"",position:"bottom",highlightPulse:!0,showSkip:!0,mobileOnly:!0},{id:"desktop-sidebar",title:"Selecting Shapes",generalContent:"",desktopContent:`Choose from Bodies/Serifs or Joins in the sidebar.

Click a shape to select it.

Your selected shape becomes highlighted.`,mobileContent:`Choose from Bodies/Serifs or Joins in the topbar.
Tap a shape to select it.

Your selected shape becomes highlighted.`,desktopTargetSelector:"#sidebar",mobileTargetSelector:"",position:"right",highlightPulse:!0,showSkip:!0,desktopOnly:!0},{id:"placing-shapes",title:"Placing Shapes",generalContent:"",desktopContent:`Click any grid cell to place your selected shape.

• Serifs/Bodies go in the 5×5 grid
• Joins go in the 4×4 grid.`,mobileContent:`Tap any grid cell to place your selected shape.

• Serifs/Bodies go in the 5×5 grid
• Joins go in the 4×4 grid.`,desktopTargetSelector:".builder-grids-wrapper",mobileTargetSelector:"",position:"bottom",highlightPulse:!0,showSkip:!0},{id:"erase-mode",title:"Erase Mode",generalContent:"Toggle Erase Mode to quickly remove shapes.",desktopContent:"Click the Erase button, then click any shape to remove it.",mobileContent:"Tap the Erase button, then tap any shape to target it for deletion. Tap again to confirm the removal.",desktopTargetSelector:"#desktopEraseBtn",mobileTargetSelector:"#mobileEraseBtn",position:"bottom",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"preview-mode",title:"Preview Mode",generalContent:`Hide grid lines to see your form without distractions.

Toggle Preview Mode to view your composition cleanly.`,desktopContent:"",mobileContent:"",desktopTargetSelector:"#desktopPreviewBtn",mobileTargetSelector:"#mobilePreviewBtn",position:"bottom",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"saving",title:"Saving & Loading",generalContent:`Save your work to browser storage or download as JSON.

Use the Save menu to manage your compositions.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"#mobileSettingsBtn",position:"center",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"size",title:"Adjusting Size",generalContent:`Change the grid size to view your form at different scales.

Experiment with different sizes to see how your composition looks.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"#mobileSizeBtn",position:"center",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"complete",title:"You're Ready to Create!",generalContent:`Start building your asemic typeforms.

Experiment, explore, and have fun.

💡 Tip: Check out the Archive to see examples, or try the Word and Sentence Generators for inspiration.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"",position:"center",highlightPulse:!1,showSkip:!1}];let k=0,ge=window.innerWidth<768,te,X,le,ue;window.nextTutorialStep=function(){console.log("Next button clicked, current step:",k),te();const e=X();if(k++,k>=e.length){ue();return}le(e[k])};window.previousTutorialStep=function(){console.log("Back button clicked"),te(),k--;const e=X();k<0&&(k=0),le(e[k])};window.skipTutorial=function(){console.log("Skip button clicked"),te(),ue()};window.resetTutorial=function(){console.log("Resetting tutorial state..."),localStorage.removeItem("hasSeenFreebuilderTutorial"),te();const e=document.getElementById("tutorialHelpBtn");e&&e.remove(),k=0,console.log("Tutorial reset complete. Reload the page to see the tutorial again.")};function Ae(){if(console.log("Initializing tutorial system..."),localStorage.getItem("hasSeenFreebuilderTutorial")){console.log("User has seen tutorial, adding help button"),ye();return}setTimeout(()=>{console.log("Starting tutorial for first-time user"),ve()},1500)}function ve(){k=0,ge=window.innerWidth<768;const e=X();e.length>0&&le(e[0])}X=function(){return Me.filter(e=>!(e.mobileOnly&&!ge||e.desktopOnly&&ge))};le=function(e){console.log("Showing tutorial step:",e.id);const t=window.innerWidth<768,i=t?e.mobileTargetSelector||e.desktopTargetSelector:e.desktopTargetSelector||e.mobileTargetSelector,n=t&&e.mobilePosition?e.mobilePosition:e.position,c=Be();document.body.appendChild(c),i&&(Re(i,e.highlightPulse)||console.warn("Target element not found:",i));const r=Le(e);document.body.appendChild(r),requestAnimationFrame(()=>{Ge(r,i,n,e.id)}),requestAnimationFrame(()=>{c.style.opacity="1",r.style.opacity="1"})};function Be(){const e=document.createElement("div");return e.id="tutorial-overlay",e.className="fixed inset-0 bg-black/30 z-[9998] transition-opacity duration-300",e.style.opacity="0",e.addEventListener("click",t=>{if(t.target===e){const n=X()[k];n&&n.showSkip&&skipTutorial()}}),e}function Le(e){const t=document.createElement("div");t.id="tutorial-tooltip",t.className="fixed z-[9999] bg-white dark:bg-slate-800 rounded-lg shadow-2xl p-4 md:p-6 max-w-sm md:max-w-md transition-opacity duration-300",t.style.opacity="0";const i=X(),n=i.findIndex(s=>s.id===e.id),c=i.length,r=window.innerWidth<768;let o=e.generalContent||"";if(r&&e.mobileContent?o=e.mobileContent:!r&&e.desktopContent&&(o=e.desktopContent),e.generalContent&&(r&&e.mobileContent||!r&&e.desktopContent)){const s=r?e.mobileContent:e.desktopContent;o=e.generalContent+(s?`

`+s:"")}return t.innerHTML=`
    <div class="space-y-3 md:space-y-4">
      <div class="flex items-start justify-between">
        <h3 class="text-lg md:text-xl font-serif font-bold text-gray-900 dark:text-gray-100 pr-8 leading-tight">
          ${e.title}
        </h3>
        ${e.showSkip?`
          <button onclick="window.skipTutorial()" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors text-sm font-medium">
            Skip
          </button>
        `:""}
      </div>

      <p class="text-sm md:text-base text-gray-600 dark:text-gray-300 leading-relaxed whitespace-pre-line">
        ${o}
      </p>

      <div class="flex items-center justify-between pt-3 md:pt-4">
        <div class="text-xs md:text-sm text-gray-500">
          Step ${n+1} of ${c}
        </div>

        <div class="flex gap-2">
          ${n>0?`
            <button onclick="window.previousTutorialStep()"
              class="px-3 md:px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-slate-700 transition-colors text-sm font-medium text-gray-700 dark:text-gray-200">
              Back
            </button>
          `:""}

          <button onclick="window.nextTutorialStep()"
            class="px-4 md:px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium">
            ${n===c-1?"Finish":"Next"}
          </button>
        </div>
      </div>
    </div>
  `,t}function Re(e,t=!1){const i=document.querySelector(e);if(!i)return!1;const n=i.getBoundingClientRect(),c=document.createElement("div");return c.id="tutorial-spotlight",c.className=`fixed z-[9998] border-4 border-blue-500 rounded-lg pointer-events-none transition-all duration-300 ${t?"animate-pulse":""}`,c.style.cssText=`
    top: ${n.top-8}px;
    left: ${n.left-8}px;
    width: ${n.width+16}px;
    height: ${n.height+16}px;
    box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.4);
  `,document.body.appendChild(c),!0}function Ge(e,t,i,n=null){if(!t||i==="center"){e.style.cssText+=`
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    `;return}const c=document.querySelector(t);if(!c){e.style.cssText+=`
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    `;return}const r=c.getBoundingClientRect(),o=e.getBoundingClientRect(),s=16,h=window.innerWidth,b=window.innerHeight;let a,g,l="";switch(i){case"bottom":a=r.bottom+s,g=r.left+r.width/2,l="translateX(-50%)",a+o.height>b&&(a=r.top-o.height-s);break;case"top":a=r.top-o.height-s,g=r.left+r.width/2,l="translateX(-50%)",a<0&&(a=r.bottom+s);break;case"right":a=r.top+r.height/2,g=r.right+s,l="translateY(-50%)",g+o.width>h&&(g=r.left-o.width-s);break;case"left":a=r.top+r.height/2,g=r.left-o.width-s,l="translateY(-50%)",g<0&&(g=r.right+s);break;default:a=b/2,g=h/2,l="translate(-50%, -50%)"}n==="erase-mode"&&(a-=80),n==="preview-mode"&&(a-=80);const S=window.innerWidth<768&&(n==="saving"||n==="size");let p=g,f=a;l.includes("translateX(-50%)")&&(p=g-o.width/2),l.includes("translateY(-50%)")&&(f=a-o.height/2),l==="translate(-50%, -50%)"&&(p=g-o.width/2,f=a-o.height/2),p<s&&(g=s,l.includes("translateX(-50%)")&&(g=s+o.width/2),l=l.replace("translateX(-50%)","")),p+o.width>h-s&&(g=h-o.width-s,l.includes("translateX(-50%)")&&(g=h-o.width/2-s),l=l.replace("translateX(-50%)","")),f<s&&(a=s,l.includes("translateY(-50%)")&&(a=s+o.height/2),l=l.replace("translateY(-50%)","")),f+o.height>b-s&&(a=b-o.height-s,l.includes("translateY(-50%)")&&(a=b-o.height/2-s),l=l.replace("translateY(-50%)","")),l=l.trim(),S?e.style.cssText+=`
      top: ${a}px;
      right: 30px;
      margin-left: 100px;
      left: auto;
      ${l?`transform: ${l};`:""}
    `:e.style.cssText+=`
      top: ${a}px;
      left: ${g}px;
      ${l?`transform: ${l};`:""}
    `}te=function(){const e=document.getElementById("tutorial-overlay"),t=document.getElementById("tutorial-tooltip"),i=document.getElementById("tutorial-spotlight");e&&(e.style.opacity="0",setTimeout(()=>e.remove(),300)),t&&(t.style.opacity="0",setTimeout(()=>t.remove(),300)),i&&i.remove()};ue=function(){localStorage.setItem("hasSeenFreebuilderTutorial","true"),console.log("Tutorial completed"),ye()};function ye(){if(document.getElementById("tutorialHelpBtn"))return;const e=document.querySelector("nav");if(!e){console.warn("Nav element not found, cannot add help button");return}const t=e.querySelector(".flex.items-center.space-x-4:last-child");if(!t){console.warn("Right section not found, cannot add help button");return}const i=document.createElement("button");i.id="tutorialHelpBtn",i.className="px-3 md:px-4 py-1.5 md:py-2 hover:underline text-black dark:text-white rounded-lg transition-colors text-sm md:text-base font-medium shadow-md",i.textContent="Help",i.addEventListener("click",()=>{console.log("Help button clicked, restarting tutorial"),ve()}),t.appendChild(i),console.log("Help button added to navigation")}Ce();setTimeout(()=>{Ae()},1e3);
