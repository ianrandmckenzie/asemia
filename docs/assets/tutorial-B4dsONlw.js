async function Ct(t){return new Promise((e,r)=>{const i=new Image;i.crossOrigin="anonymous",i.onload=()=>{const d=document.createElement("canvas");d.width=i.width,d.height=i.height,d.getContext("2d").drawImage(i,0,0);try{const o=d.toDataURL("image/png");e(o)}catch(o){console.warn("Failed to convert image to data URL:",o),e(t)}},i.onerror=()=>{console.warn("Failed to load image:",t),e(t)},i.src=t})}async function mt(){const t=document.getElementById("serifsGrid"),e=document.getElementById("joinsGrid");if(!t||!e)throw new Error("Grid not found. Please ensure the builder is loaded.");let r=1,i=t.parentElement;for(;i&&i!==document.body;){const M=window.getComputedStyle(i).transform;if(M&&M!=="none"){const C=M.match(/matrix\(([^)]+)\)/);if(C){const Q=C[1].split(",").map(q=>parseFloat(q.trim()));if(Q.length>=6){r=Q[0],console.log(`Detected grid scale factor: ${r}`);break}}}i=i.parentElement}const d=500,l=500,o=400,n=400,w=window.getComputedStyle(e),h=parseFloat(w.top)||50,a=parseFloat(w.left)||50,c=0,s=0,$=Math.max(d,a+o),T=Math.max(l,h+n),f=$-c,m=T-s,b=t.getBoundingClientRect(),A=e.getBoundingClientRect(),P=Math.min(b.left,A.left),y=Math.min(b.top,A.top);console.log(`Export debug info:
    - Scale factor: ${r}
    - Serifs grid: ${d}x${l}
    - Joins grid: ${o}x${n} at (${a}, ${h})
    - Export dimensions: ${f}x${m}
    - Serifs screen rect: ${b.width}x${b.height}
    - Joins screen rect: ${A.width}x${A.height}
    - Screen reference: (${P}, ${y})
  `);const g="http://www.w3.org/2000/svg",B=document.createElementNS(g,"svg");B.setAttribute("xmlns",g),B.setAttribute("viewBox",`0 0 ${f} ${m}`),B.setAttribute("width",f),B.setAttribute("height",m);const I=document.createElementNS(g,"g"),V=[{element:t,rect:b,name:"serifs"},{element:e,rect:A,name:"joins"}];for(const R of V){const M=R.element.querySelectorAll(".grid-cell");for(const C of M){const Q=C.querySelectorAll("svg"),q=C.querySelectorAll('[data-textured="true"]:not(svg)');for(const Z of Q){const v=Z.cloneNode(!0),G=C.getBoundingClientRect(),st=(G.left-P)/r,S=(G.top-y)/r,x=window.getComputedStyle(Z),F=parseFloat(x.width)||100,tt=parseFloat(x.height)||100;console.log(`Shape export - Cell screen: (${G.left}, ${G.top}), ${G.width}x${G.height}, Computed SVG: ${x.width}x${x.height}, Final pos: (${st}, ${S}), Size: ${F}x${tt}`);const et=x.position,N=x.top,j=x.left,z=x.right,H=x.bottom,O=x.transform;let W=st,ot=S;const ut=100,gt=100;if(et==="absolute"){if(j!=="auto"&&j!==""){const p=parseFloat(j);W+=p}else if(z!=="auto"&&z!==""){const p=parseFloat(z);W+=ut-F-p}if(N!=="auto"&&N!==""){const p=parseFloat(N);ot+=p}else if(H!=="auto"&&H!==""){const p=parseFloat(H);ot+=gt-tt-p}}const U=document.createElementNS(g,"g");let k=`translate(${W}, ${ot})`;if(O&&O!=="none"){const p=O.match(/matrix\(([^)]+)\)/);if(p){const at=p[1].split(",").map(Y=>parseFloat(Y.trim()));if(at.length===6){const Y=at[4],J=at[5];k+=` translate(${Y}, ${J})`}}}U.setAttribute("transform",k);const X=v.innerHTML,lt=v.getAttribute("viewBox");if(lt){const p=document.createElementNS(g,"svg");p.setAttribute("viewBox",lt),p.setAttribute("width",F),p.setAttribute("height",tt),v.dataset.textured&&(p.dataset.textured=v.dataset.textured),v.dataset.textureType&&(p.dataset.textureType=v.dataset.textureType),v.dataset.textureColor&&(p.dataset.textureColor=v.dataset.textureColor),v.dataset.textureId&&(p.dataset.textureId=v.dataset.textureId),p.innerHTML=X,U.appendChild(p)}else{const p=document.createElementNS(g,"g");p.innerHTML=X,U.appendChild(p)}I.appendChild(U)}for(const Z of q){const v=C.getBoundingClientRect(),G=(v.left-P)/r,st=(v.top-y)/r,S=window.getComputedStyle(Z),x=parseFloat(S.width)||100,F=parseFloat(S.height)||100,tt=S.position,et=S.top,N=S.left,j=S.right,z=S.bottom,H=S.transform;let O=G,W=st;const ot=100,ut=100;if(tt==="absolute"){if(N!=="auto"&&N!==""){const k=parseFloat(N);O+=k}else if(j!=="auto"&&j!==""){const k=parseFloat(j);O+=ot-x-k}if(et!=="auto"&&et!==""){const k=parseFloat(et);W+=k}else if(z!=="auto"&&z!==""){const k=parseFloat(z);W+=ut-F-k}}const gt=Z.dataset.textureId,U=S.webkitMaskImage||S.maskImage;if(U&&U.includes("data:image/svg+xml;base64,")){const k=U.match(/data:image\/svg\+xml;base64,([^)'"]+)/);if(k)try{const X=k[1],lt=decodeURIComponent(escape(atob(X))),Y=new DOMParser().parseFromString(lt,"image/svg+xml").querySelector("svg");if(Y){const J=document.createElementNS(g,"g");let ft=`translate(${O}, ${W})`;if(H&&H!=="none"){const u=H.match(/matrix\(([^)]+)\)/);if(u){const L=u[1].split(",").map(it=>parseFloat(it.trim()));if(L.length===6){const it=L[4],kt=L[5];ft+=` translate(${it}, ${kt})`}}}J.setAttribute("transform",ft);const wt=document.createElementNS(g,"defs"),D=document.createElementNS(g,"pattern"),ct=`texture-${gt}-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;D.setAttribute("id",ct),D.setAttribute("patternUnits","userSpaceOnUse"),D.setAttribute("width",x),D.setAttribute("height",F);const bt=S.backgroundImage.match(/url\(['"]?([^'"]+)['"]?\)/);if(bt){let u=bt[1];u.startsWith("/")?u=window.location.origin+u:!u.startsWith("http")&&!u.startsWith("data:")&&(u=new URL(u,window.location.href).href);try{u=await Ct(u)}catch(it){console.warn("Failed to convert texture to data URL, using absolute URL:",it)}const L=document.createElementNS(g,"image");L.setAttribute("href",u),L.setAttribute("width",x),L.setAttribute("height",F),L.setAttribute("preserveAspectRatio","xMidYMid slice"),D.appendChild(L)}wt.appendChild(D),J.appendChild(wt);const xt=Y.getAttribute("viewBox"),_=document.createElementNS(g,"svg");_.setAttribute("width",x),_.setAttribute("height",F),xt&&_.setAttribute("viewBox",xt);const nt=Y.cloneNode(!0),St=nt.querySelectorAll("path, polygon, circle, ellipse, rect, line, polyline");St.forEach(u=>{(!u.hasAttribute("fill")||u.getAttribute("fill")!=="none"&&u.getAttribute("fill")!=="")&&u.setAttribute("fill",`url(#${ct})`),u.hasAttribute("stroke")&&u.getAttribute("stroke")!=="none"&&u.getAttribute("stroke")!==""&&u.setAttribute("stroke",`url(#${ct})`)}),St.length===0&&Array.from(nt.children).forEach(u=>{u.nodeName!=="defs"&&u.nodeName!=="style"&&u.setAttribute("fill",`url(#${ct})`)}),nt.children.length>0?Array.from(nt.children).forEach(u=>{_.appendChild(u)}):_.innerHTML=nt.innerHTML,J.appendChild(_),I.appendChild(J)}}catch(X){console.warn("Failed to process textured element:",X)}}}}}return B.appendChild(I),{svg:B,width:f,height:m}}async function Tt(){console.log("Starting SVG export...");const t=window.getPreviewMode?window.getPreviewMode():!1;window.setPreviewMode&&!t&&(window.setPreviewMode(!0),document.body.classList.add("preview-mode"),await new Promise(e=>setTimeout(e,100)));try{const{svg:e}=await mt();e.querySelectorAll("path, polygon, circle, ellipse, rect, line, polyline").forEach(w=>{let h=w.closest("svg"),a=!1,c=null;for(;h&&!a;){if(h.getAttribute("data-texture-type")==="color"){a=!0,c=h.getAttribute("data-texture-color");break}const $=h.parentElement;h=$?$.closest("svg"):null}if(a&&c){w.setAttribute("fill",c);const s=w.getAttribute("stroke");s&&s!=="none"&&w.setAttribute("stroke",c)}});const d=new XMLSerializer().serializeToString(e),l=new Blob([d],{type:"image/svg+xml"}),o=URL.createObjectURL(l),n=document.createElement("a");n.href=o,n.download=`asemia-composition-${Date.now()}.svg`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(o),console.log("SVG export complete!")}catch(e){console.error("SVG export failed:",e),alert("Export failed: "+e.message)}finally{window.setPreviewMode&&!t&&(window.setPreviewMode(!1),document.body.classList.remove("preview-mode"))}}async function At(){console.log("Starting PNG export...");const t=window.getPreviewMode?window.getPreviewMode():!1;window.setPreviewMode&&!t&&(window.setPreviewMode(!0),document.body.classList.add("preview-mode"),await new Promise(e=>setTimeout(e,100)));try{const{svg:e,width:r,height:i}=await mt();e.querySelectorAll("path, polygon, circle, ellipse, rect, line, polyline").forEach(m=>{let b=m.closest("svg"),A=!1,P=null;for(;b&&!A;){if(b.getAttribute("data-texture-type")==="color"){A=!0,P=b.getAttribute("data-texture-color");break}const g=b.parentElement;b=g?g.closest("svg"):null}if(A&&P){m.setAttribute("fill",P);const y=m.getAttribute("stroke");y&&y!=="none"&&m.setAttribute("stroke",P)}});const o=new XMLSerializer().serializeToString(e),n=new Blob([o],{type:"image/svg+xml;charset=utf-8"}),w=URL.createObjectURL(n),h=new Image;await new Promise((m,b)=>{h.onload=m,h.onerror=b,h.src=w});const a=document.createElement("canvas"),c=2;a.width=r*c,a.height=i*c;const s=a.getContext("2d");s.scale(c,c),s.drawImage(h,0,0,r,i),URL.revokeObjectURL(w);const $=await new Promise(m=>{a.toBlob(m,"image/png")}),T=URL.createObjectURL($),f=document.createElement("a");f.href=T,f.download=`asemia-composition-${Date.now()}.png`,document.body.appendChild(f),f.click(),document.body.removeChild(f),URL.revokeObjectURL(T),console.log("PNG export complete!")}catch(e){console.error("PNG export failed:",e),alert("Export failed: "+e.message)}finally{window.setPreviewMode&&!t&&(window.setPreviewMode(!1),document.body.classList.remove("preview-mode"))}}async function Pt(){console.log("Starting JPEG export...");const t=window.getPreviewMode?window.getPreviewMode():!1;window.setPreviewMode&&!t&&(window.setPreviewMode(!0),document.body.classList.add("preview-mode"),await new Promise(e=>setTimeout(e,100)));try{const e=document.documentElement.classList.contains("dark"),r=window.getComputedStyle(document.body),i=e?"#0f172a":"#ffffff",d=e?"#ffffff":"#000000";console.log("Theme:",e?"dark":"light"),console.log("Background color:",i),console.log("Fill color:",d);const{svg:l,width:o,height:n}=await mt(),w=l.cloneNode(!0);w.querySelectorAll("path, polygon, circle, ellipse, rect, line, polyline").forEach((g,B)=>{const I=g.getAttribute("fill"),V=g.getAttribute("stroke");let R=g.closest("svg"),M=!1,C=null;for(;R&&!M;){if(R.getAttribute("data-texture-type")==="color"){M=!0,C=R.getAttribute("data-texture-color");break}const q=R.parentElement;R=q?q.closest("svg"):null}M&&C?(g.setAttribute("fill",C),V&&V!=="none"&&g.setAttribute("stroke",C)):!M&&(!I||I!=="none"&&!I.startsWith("url(#"))&&(g.setAttribute("fill",d),V&&V!=="none"&&!V.startsWith("url(#")&&g.setAttribute("stroke",d))});const c=new XMLSerializer().serializeToString(w),s=new Blob([c],{type:"image/svg+xml;charset=utf-8"}),$=URL.createObjectURL(s),T=new Image;await new Promise((g,B)=>{T.onload=g,T.onerror=B,T.src=$});const f=document.createElement("canvas"),m=2;f.width=o*m,f.height=n*m;const b=f.getContext("2d");b.scale(m,m),b.fillStyle=i,b.fillRect(0,0,o,n),b.drawImage(T,0,0,o,n),URL.revokeObjectURL($);const A=await new Promise(g=>{f.toBlob(g,"image/jpeg",.95)}),P=URL.createObjectURL(A),y=document.createElement("a");y.href=P,y.download=`asemia-composition-${Date.now()}.jpg`,document.body.appendChild(y),y.click(),document.body.removeChild(y),URL.revokeObjectURL(P),console.log("JPEG export complete!")}catch(e){console.error("JPEG export failed:",e),alert("Export failed: "+e.message)}finally{window.setPreviewMode&&!t&&(window.setPreviewMode(!1),document.body.classList.remove("preview-mode"))}}document.addEventListener("DOMContentLoaded",()=>{window.exportAsPNG=At,window.exportAsSVG=Tt,window.exportAsJPEG=Pt,console.log("Export functionality initialized")});const Et=[{id:"welcome",title:"Welcome to the Asemic Typeform Crafter!",generalContent:`Build unique typographic forms using the fundamental elements of type: Serifs, Bodies, and Joins.

Let's take a quick tour.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"",position:"center",showSkip:!0,highlightPulse:!1},{id:"grids",title:"Understanding the Grids",generalContent:`You work with two overlapping grids:

• 5×5 Serifs Grid (white cells)
• 4×4 Joins Grid (inset, connecting elements)

Click anywhere in the grid to place shapes.`,desktopContent:"",mobileContent:"",desktopTargetSelector:".builder-grids-wrapper",mobileTargetSelector:"",position:"bottom",highlightPulse:!0,showSkip:!0},{id:"mobile-tabs",title:"Selecting Shapes",generalContent:`Tap a tab to view available shapes in that category.

Then tap a shape to select it.`,desktopContent:"",mobileContent:"",desktopTargetSelector:"#mobileSerifTab",mobileTargetSelector:"",position:"bottom",highlightPulse:!0,showSkip:!0,mobileOnly:!0},{id:"desktop-sidebar",title:"Selecting Shapes",generalContent:"",desktopContent:`Choose from Bodies/Serifs or Joins in the sidebar.

Click a shape to select it.

Your selected shape becomes highlighted.`,mobileContent:`Choose from Bodies/Serifs or Joins in the topbar.
Tap a shape to select it.

Your selected shape becomes highlighted.`,desktopTargetSelector:"#sidebar",mobileTargetSelector:"",position:"right",highlightPulse:!0,showSkip:!0,desktopOnly:!0},{id:"placing-shapes",title:"Placing Shapes",generalContent:"",desktopContent:`Click any grid cell to place your selected shape.

• Serifs/Bodies go in the 5×5 grid
• Joins go in the 4×4 grid.`,mobileContent:`Tap any grid cell to place your selected shape.

• Serifs/Bodies go in the 5×5 grid
• Joins go in the 4×4 grid.`,desktopTargetSelector:".builder-grids-wrapper",mobileTargetSelector:"",position:"bottom",highlightPulse:!0,showSkip:!0},{id:"erase-mode",title:"Erase Mode",generalContent:"Toggle Erase Mode to quickly remove shapes.",desktopContent:"Click the Erase button, then click any shape to remove it.",mobileContent:"Tap the Erase button, then tap any shape to target it for deletion. Tap again to confirm the removal.",desktopTargetSelector:"#desktopEraseBtn",mobileTargetSelector:"#mobileEraseBtn",position:"bottom",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"preview-mode",title:"Preview Mode",generalContent:`Hide grid lines to see your form without distractions.

Toggle Preview Mode to view your composition cleanly.`,desktopContent:"",mobileContent:"",desktopTargetSelector:"#desktopPreviewBtn",mobileTargetSelector:"#mobilePreviewBtn",position:"bottom",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"saving",title:"Saving & Loading",generalContent:`Save your work to browser storage or download as JSON.

Use the Save menu to manage your compositions.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"#mobileSettingsBtn",position:"center",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"size",title:"Adjusting Size",generalContent:`Change the grid size to view your form at different scales.

Experiment with different sizes to see how your composition looks.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"#mobileSizeBtn",position:"center",mobilePosition:"top",highlightPulse:!0,showSkip:!0},{id:"complete",title:"You're Ready to Create!",generalContent:`Start building your asemic typeforms.

Experiment, explore, and have fun.

<img src="/assets/icons/lightbulb.svg" alt="Tip" class="inline-block w-5 h-5 align-text-bottom"> Tip: Check out the Archive to see examples, or try the Word and Sentence Generators for inspiration.`,desktopContent:"",mobileContent:"",desktopTargetSelector:null,mobileTargetSelector:"",position:"center",highlightPulse:!1,showSkip:!1}];let E=0,pt=window.innerWidth<768,rt,K,dt,ht;window.nextTutorialStep=function(){console.log("Next button clicked, current step:",E),rt();const t=K();if(E++,E>=t.length){ht();return}dt(t[E])};window.previousTutorialStep=function(){console.log("Back button clicked"),rt(),E--;const t=K();E<0&&(E=0),dt(t[E])};window.skipTutorial=function(){console.log("Skip button clicked"),rt(),ht()};window.resetTutorial=function(){console.log("Resetting tutorial state..."),localStorage.removeItem("hasSeenFreebuilderTutorial"),rt();const t=document.getElementById("tutorialHelpBtn");t&&t.remove(),E=0,console.log("Tutorial reset complete. Reload the page to see the tutorial again.")};function Gt(){if(console.log("Initializing tutorial system..."),localStorage.getItem("hasSeenFreebuilderTutorial")){console.log("User has seen tutorial, adding help button"),vt();return}setTimeout(()=>{console.log("Starting tutorial for first-time user"),yt()},1500)}function yt(){E=0,pt=window.innerWidth<768;const t=K();t.length>0&&dt(t[0])}K=function(){return Et.filter(t=>!(t.mobileOnly&&!pt||t.desktopOnly&&pt))};dt=function(t){console.log("Showing tutorial step:",t.id);const e=window.innerWidth<768,r=e?t.mobileTargetSelector||t.desktopTargetSelector:t.desktopTargetSelector||t.mobileTargetSelector,i=e&&t.mobilePosition?t.mobilePosition:t.position,d=$t();document.body.appendChild(d),r&&(Bt(r,t.highlightPulse)||console.warn("Target element not found:",r));const l=Mt(t);document.body.appendChild(l),requestAnimationFrame(()=>{Lt(l,r,i,t.id)}),requestAnimationFrame(()=>{d.style.opacity="1",l.style.opacity="1"})};function $t(){const t=document.createElement("div");return t.id="tutorial-overlay",t.className="fixed inset-0 bg-black/30 z-[9998] transition-opacity duration-300",t.style.opacity="0",t.addEventListener("click",e=>{if(e.target===t){const i=K()[E];i&&i.showSkip&&skipTutorial()}}),t}function Mt(t){const e=document.createElement("div");e.id="tutorial-tooltip",e.className="fixed z-[9999] bg-white dark:bg-slate-800 rounded-lg shadow-2xl p-4 md:p-6 max-w-sm md:max-w-md transition-opacity duration-300",e.style.opacity="0";const r=K(),i=r.findIndex(n=>n.id===t.id),d=r.length,l=window.innerWidth<768;let o=t.generalContent||"";if(l&&t.mobileContent?o=t.mobileContent:!l&&t.desktopContent&&(o=t.desktopContent),t.generalContent&&(l&&t.mobileContent||!l&&t.desktopContent)){const n=l?t.mobileContent:t.desktopContent;o=t.generalContent+(n?`

`+n:"")}return e.innerHTML=`
    <div class="space-y-3 md:space-y-4">
      <div class="flex items-start justify-between">
        <h3 class="text-lg md:text-xl font-serif font-bold text-gray-900 dark:text-gray-100 pr-8 leading-tight">
          ${t.title}
        </h3>
        ${t.showSkip?`
          <button onclick="window.skipTutorial()" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors text-sm font-medium">
            Skip
          </button>
        `:""}
      </div>

      <p class="text-sm md:text-base text-gray-600 dark:text-gray-300 leading-relaxed whitespace-pre-line">
        ${o}
      </p>

      <div class="flex items-center justify-between pt-3 md:pt-4">
        <div class="text-xs md:text-sm text-gray-500">
          Step ${i+1} of ${d}
        </div>

        <div class="flex gap-2">
          ${i>0?`
            <button onclick="window.previousTutorialStep()"
              class="px-3 md:px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-slate-700 transition-colors text-sm font-medium text-gray-700 dark:text-gray-200">
              Back
            </button>
          `:""}

          <button onclick="window.nextTutorialStep()"
            class="px-4 md:px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium">
            ${i===d-1?"Finish":"Next"}
          </button>
        </div>
      </div>
    </div>
  `,e}function Bt(t,e=!1){const r=document.querySelector(t);if(!r)return!1;const i=r.getBoundingClientRect(),d=document.createElement("div");return d.id="tutorial-spotlight",d.className=`fixed z-[9998] border-4 border-blue-500 rounded-lg pointer-events-none transition-all duration-300 ${e?"animate-pulse":""}`,d.style.cssText=`
    top: ${i.top-8}px;
    left: ${i.left-8}px;
    width: ${i.width+16}px;
    height: ${i.height+16}px;
    box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.4);
  `,document.body.appendChild(d),!0}function Lt(t,e,r,i=null){if(!e||r==="center"){t.style.cssText+=`
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    `;return}const d=document.querySelector(e);if(!d){t.style.cssText+=`
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    `;return}const l=d.getBoundingClientRect(),o=t.getBoundingClientRect(),n=16,w=window.innerWidth,h=window.innerHeight;let a,c,s="";switch(r){case"bottom":a=l.bottom+n,c=l.left+l.width/2,s="translateX(-50%)",a+o.height>h&&(a=l.top-o.height-n);break;case"top":a=l.top-o.height-n,c=l.left+l.width/2,s="translateX(-50%)",a<0&&(a=l.bottom+n);break;case"right":a=l.top+l.height/2,c=l.right+n,s="translateY(-50%)",c+o.width>w&&(c=l.left-o.width-n);break;case"left":a=l.top+l.height/2,c=l.left-o.width-n,s="translateY(-50%)",c<0&&(c=l.right+n);break;default:a=h/2,c=w/2,s="translate(-50%, -50%)"}i==="erase-mode"&&(a-=80),i==="preview-mode"&&(a-=80);const T=window.innerWidth<768&&(i==="saving"||i==="size");let f=c,m=a;s.includes("translateX(-50%)")&&(f=c-o.width/2),s.includes("translateY(-50%)")&&(m=a-o.height/2),s==="translate(-50%, -50%)"&&(f=c-o.width/2,m=a-o.height/2),f<n&&(c=n,s.includes("translateX(-50%)")&&(c=n+o.width/2),s=s.replace("translateX(-50%)","")),f+o.width>w-n&&(c=w-o.width-n,s.includes("translateX(-50%)")&&(c=w-o.width/2-n),s=s.replace("translateX(-50%)","")),m<n&&(a=n,s.includes("translateY(-50%)")&&(a=n+o.height/2),s=s.replace("translateY(-50%)","")),m+o.height>h-n&&(a=h-o.height-n,s.includes("translateY(-50%)")&&(a=h-o.height/2-n),s=s.replace("translateY(-50%)","")),s=s.trim(),T?t.style.cssText+=`
      top: ${a}px;
      right: 30px;
      margin-left: 100px;
      left: auto;
      ${s?`transform: ${s};`:""}
    `:t.style.cssText+=`
      top: ${a}px;
      left: ${c}px;
      ${s?`transform: ${s};`:""}
    `}rt=function(){const t=document.getElementById("tutorial-overlay"),e=document.getElementById("tutorial-tooltip"),r=document.getElementById("tutorial-spotlight");t&&(t.style.opacity="0",setTimeout(()=>t.remove(),300)),e&&(e.style.opacity="0",setTimeout(()=>e.remove(),300)),r&&r.remove()};ht=function(){localStorage.setItem("hasSeenFreebuilderTutorial","true"),console.log("Tutorial completed"),vt()};function vt(){if(document.getElementById("tutorialHelpBtn"))return;const t=document.querySelector("nav");if(!t){console.warn("Nav element not found, cannot add help button");return}const e=t.querySelector(".flex.items-center.space-x-4:last-child");if(!e){console.warn("Right section not found, cannot add help button");return}const r=document.createElement("button");r.id="tutorialHelpBtn",r.className="px-3 md:px-4 py-1.5 md:py-2 hover:underline text-black dark:text-white rounded-lg transition-colors text-sm md:text-base font-medium shadow-md",r.textContent="Help",r.addEventListener("click",()=>{console.log("Help button clicked, restarting tutorial"),yt()}),e.appendChild(r),console.log("Help button added to navigation")}export{Gt as i};
